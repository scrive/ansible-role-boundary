listener "tcp" {
  address = "{{ boundary_address }}:9202"
  purpose = "proxy"
{% for option, value in boundary_worker_listener_parameters %}
  {{ option }} = "{{ value }}"
{% endfor %}
}

worker {
  name = "{{ ansible_hostname }}-worker"
  description = "Boundary worker."

  controllers = [
{% for controller in groups['boundary_controllers'] %}
{% if use_inventory_hostnames %}
  "{{ controller }}"
{% else %}
{% if 'ansible_default_ipv4' in hostvars[controller] %}
    "{{ hostvars[controller]['ansible_default_ipv4']['address'] }}",
{% endif %}
{% endif %}
{% endfor %}
  ]
  public_addr = "{{ inventory_hostname }}"
}

{% for key_type in ['worker-auth'] %}
{% if boundary_kms_type == 'aead' %}
kms "aead" {
  purpose   = "{{ key_type }}"
  aead_type = "aes-gcm"
  key_id    = "global_{{ key_type }}"
  key       = "{{ boundary_aead_keys[key_type] }}"
}
{% elif boundary_kms_type == 'awskms' %}
kms "awskms" {
  purpose    = "{{ key_type }}"
  region     = "{{ boundary_awskms_region }}"
  kms_key_id = "{{ boundary_awskms_keys[key_type] }}"
{% if boundary_awskms_endpoint is defined and boundary_awskms_endpoint != '' %}
  endpoint   = "{{ boundary_awskms_endpoint }}"
{% endif %}
}
{% elif boundary_kms_type == 'gcpckms' %}
kms "gcpckms" {
  purpose     = "{{ key_type }}"
  credentials = "{{ boundary_gcpckms_credentials }}"
  project     = "{{ boundary_gcpckms_project }}"
  region      = "{{ boundary_gcpckms_region }}"
  key_ring    = "{{ boundary_gcpckms_keyring }}"
  crypto_key  = "{{ boundary_gcpckms_keys[key_type] }}"
}
{% elif boundary_kms_type == 'transit' %}
kms "transit" {
  purpose            = "{{ key_type }}"
  address            = "{{ 'https' if boundary_vault_use_tls else 'http' }}://{{ boundary_vault_instances[0] }}:8200"
  token              = "{{ lookup('env','VAULT_TOKEN') }}"
  disable_renewal    = "{{ boundary_transit_disable_renewal |default('false') }}"

  // Key configuration
  key_name           = "{{ boundary_transit_keys[key_type] }}"
  namespace          = "{{ boundary_transit_namespace }}"
  mount_path         = "{{ boundary_transit_mount_path }}"

{% if boundary_vault_use_tls %}
  // TLS Configuration
  tls_server_name    = "{{ boundary_transit_tls_server_name |default(boundary_vault_instances[0]) }}"
  tls_ca_cert        = "{{ boundary_transit_tls_ca_file     |default('') }}"
  tls_client_cert    = "{{ boundary_transit_tls_cert_file   |default('') }}"
  tls_client_key     = "{{ boundary_transit_tls_key_file    |default('') }}"
  tls_skip_verify    = "{{ boundary_transit_tls_skip_verify |default('false') }}"
{% endif %}
}
{% endif %}
{% endfor %}
